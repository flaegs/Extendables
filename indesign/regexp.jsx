/** * @desc This is a wrapper-function to do quick and dirty GREP-based find and replace * @param {String} First parameter is the string of a Regular-Expression (InDesign flavor naturally) * The second parameter is the replacement string. * It works just the same is it does manually in InDesign. */Object.prototype.grepReplace = function (regex, replace) {	//Clear the find/change grep preferences. 	app.findGrepPreferences = NothingEnum.nothing; 	app.changeGrepPreferences = NothingEnum.nothing; 		//Set the find options. 	app.findChangeGrepOptions.includeFootnotes = true; 	app.findChangeGrepOptions.includeHiddenLayers = true; 	app.findChangeGrepOptions.includeLockedLayersForFind = true; 	app.findChangeGrepOptions.includeLockedStoriesForFind = true; 	app.findChangeGrepOptions.includeMasterPages = false; 		//Set Find and Replace and run the thing 	app.findGrepPreferences.findWhat = regex;	app.changeGrepPreferences.changeTo = replace;	this.changeGrep();		//Clear the find/change preferences after the search. 	app.findGrepPreferences = NothingEnum.nothing; 	app.changeGrepPreferences = NothingEnum.nothing;		}Object.prototype.grepStyle = function (regex, style) {		var that = this;		// If a string has been given instead of a style, the functione tries to convert it into a paragraph-style	// first and then into a character-style.	if(typeof style === "string") { 	try {   			var stylestring = style.clone();		    style = current('document').paragraphStyles.item(stylestring);			style.isValid					} catch(e) { 			style = current('document').characterStyles.item(stylestring);			};	};	// if the style is invalid, an error is thrown	try {style.isValid} catch(e) {throw "Error in grepStyle (Extendables): This style does not exist in the current document"};		//Clear the find/change grep preferences. 	app.findGrepPreferences = NothingEnum.nothing; 	app.changeGrepPreferences = NothingEnum.nothing; 		//Check what kind of Style there is and apply it correctly	if (style.constructor.name === "CharacterStyle") {		app.changeGrepPreferences.appliedCharacterStyle = style;		}	else if (style.constructor.name === "ParagraphStyle") {		app.changeGrepPreferences.appliedParagraphStyle = style;		};		//Set the find options. 	app.findChangeGrepOptions.includeFootnotes = true; 	app.findChangeGrepOptions.includeHiddenLayers = true; 	app.findChangeGrepOptions.includeLockedLayersForFind = true; 	app.findChangeGrepOptions.includeLockedStoriesForFind = true; 	app.findChangeGrepOptions.includeMasterPages = false; 		//Set Find and Replace and run the thing 	app.findGrepPreferences.findWhat = regex;	//app.changeGrepPreferences.changeTo = result;	this.changeGrep();			//Clear the find/change preferences after the search. 	app.findGrepPreferences = NothingEnum.nothing; 	app.changeGrepPreferences = NothingEnum.nothing;		return that;			}